generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  firebaseId     String
  name           String
  phone          String
  instagram      String
  email          String   @unique
  password       String
  isOng          Boolean
  profilePicture String?
  address        Address?
  pets           Pet[]
  interactions   PetInteraction[]
}

model Address {
  id     String  @id @default(uuid())
  cep    String
  city   String
  state  String
  userId String  @unique
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum PetAge {
  YOUNG
  ADULT
  SENIOR 
}

enum PetSize {
  SMALL
  MEDIUM
  LARGE 
}

enum PetSex {
  MALE
  FEMALE
}

enum PetSpecie {
  DOG
  CAT
}

model Pet {
  id          String    @id @default(uuid())
  name        String
  species     PetSpecie
  size        PetSize
  age         PetAge
  sex         PetSex
  castrated   Boolean
  dewormed    Boolean
  vaccinated  Boolean
  description String
  adopted     Boolean    @default(false)
  ownerId     String
  createdAt   DateTime   @default(now())
  owner       User       @relation(fields: [ownerId], references: [id])
  photos      PetPhoto[]
  petInteractions PetInteraction[]
}

model PetPhoto {
  id       String  @id @default(uuid())
  url      String
  publicId String
  petId    String
  pet      Pet     @relation(fields: [petId], references: [id], onDelete: Cascade)
}

model Report {
  id         String   @id @default(uuid())
  petId     String
  userId     String
  reportText String
  status     String   @default("PENDING")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum InteractionType {
  FAVORITED
  DISCARDED
}

model PetInteraction {
  id        String          @id @default(uuid())
  userId    String
  petId     String
  type      InteractionType
  createdAt DateTime        @default(now())
  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  pet       Pet             @relation(fields: [petId], references: [id], onDelete: Cascade)

  @@unique([userId, petId])
}
